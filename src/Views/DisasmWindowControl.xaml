<UserControl x:Class="Disasmo.DisasmWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:disasmo="clr-namespace:Disasmo"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600">
    <UserControl.DataContext>
        <disasmo:MainViewModel x:Name="MainViewModel"/>
    </UserControl.DataContext>
    <UserControl.InputBindings>
        <KeyBinding Key="R" Modifiers="Control" Command="{Binding RefreshCommand}"/>
    </UserControl.InputBindings>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
        <disasmo:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

        <Style x:Key="AvalonEditStyle" TargetType="avalonedit:TextEditor">
            <Setter Property="WordWrap" Value="True" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="ShowLineNumbers" Value="True" />
            <Setter Property="LineNumbersForeground" Value="Silver" />
        </Style>
    </UserControl.Resources>
    <Grid Background="#EEF5FD">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ToolBar Background="#EEF5FD">
            <TextBlock Margin="10,3,2,0" Text="CoreCLR Path: " Foreground="Black"/>
            <Grid>
                <TextBox Width="196" Text="{Binding SettingsVm.PathToLocalCoreClr, Mode=TwoWay}"/>
                <Button Command="{Binding SettingsVm.BrowseCommand}"  Foreground="Black" Content=" ... " BorderThickness="0" HorizontalAlignment="Right" VerticalAlignment="Center" Height="18" Margin="2,0,2,0"/>
            </Grid>
            <Separator Margin="8,0,4,0"/>
            <Button Content="Reload" Command="{Binding RefreshCommand}"/>
            <Separator Margin="4,0,2,0"/>
            <Grid VerticalAlignment="Center" Margin="4,0,0,0">
                <CheckBox Content="Tiered JIT" Foreground="Black" IsChecked="{Binding TieredJitEnabled}">
                    <CheckBox.ToolTip>Use `[MethodImpl(MethodImplOptions.AggressiveOptimization)]` for tier1</CheckBox.ToolTip>
                </CheckBox>
            </Grid>
            <Separator Margin="6,0,2,0"/>
        </ToolBar>

        <TabControl x:Name="TabControl" Grid.Row="1" SelectionChanged="TabControl_OnSelectionChanged">
            <TabItem Header="Output" Width="98">
                <avalonedit:TextEditor x:Name="OutputEditor" Style="{StaticResource AvalonEditStyle}"/>
            </TabItem>

            <TabItem Header="Previous output" Width="98">
                <Grid>
                    <avalonedit:TextEditor x:Name="OutputEditorPrev" Style="{StaticResource AvalonEditStyle}"/>
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,5,0">
                        <Hyperlink Command="{Binding RunDiffWithPrevious}">Show diff</Hyperlink>
                    </TextBlock>
                </Grid>
            </TabItem>

            <TabItem Header="Settings" DataContext="{Binding SettingsVm}" Width="98">
                <StackPanel Margin="0">
                    <CheckBox Content="Show comments" Margin="8,8,10,3" IsChecked="{Binding ShowAsmComments, Mode=TwoWay}"/>
                    <CheckBox Content="Use JitDump instead of JitDisasm" IsChecked="{Binding JitDumpInsteadOfDisasm, Mode=TwoWay}" Margin="8,3"/>
                    <CheckBox Content="Show prologues and epilogues" Margin="8,3" IsChecked="{Binding ShowPrologueEpilogue, Mode=TwoWay}"/>
                    <CheckBox Content="Skip 'dotnet restore' step" IsChecked="{Binding SkipDotnetRestoreStep, Mode=TwoWay}" Margin="8,3"/>
                    <CheckBox Content="BDN disassembler (doesn't use local CoreCLR) - experimental" IsChecked="{Binding UseBdnDisasm, Mode=TwoWay}" Margin="8,3"/>
                    <StackPanel IsEnabled="{Binding UseBdnDisasm}" Margin="20,0,0,0">
                        <CheckBox Content="Print ASM" Margin="8,3" IsChecked="{Binding BdnShowAsm}"/>
                        <CheckBox Content="Print IL" Margin="8,3" IsChecked="{Binding BdnShowIL}"/>
                        <!--<CheckBox Content="Print Source" Margin="8,3" IsChecked="{Binding BdnShowSource}"/>-->
                        <StackPanel Orientation="Horizontal" Margin="8,3">
                            <TextBlock Text="Recursion depth:"/>
                            <TextBox Margin="8,0,0,0" Width="30" Text="{Binding BdnRecursionDepth, Mode=TwoWay}"/>
                        </StackPanel>
                    </StackPanel>
                    <TextBlock Text="Custom Environment variables (use comma as a separator):" Margin="8,12,0,3"/>
                    <TextBox Margin="8,0" Text="{Binding CustomEnvVars, Mode=TwoWay}"/>

                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,2,0,0">
                        <Run Text="see" Foreground="Gray"/>
                        <Hyperlink RequestNavigate="Hyperlink_OnRequestNavigate"  NavigateUri="https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/clr-configuration-knobs.md#jit-configuration-knobs">clr-configuarion-knobs</Hyperlink>
                    </TextBlock>
                </StackPanel>
            </TabItem>
            <TabItem Header="S.R.Intrinsics" Width="98">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Margin="8,0,0,0" Foreground="Gray" Text="Enter mnemonics to find corresponding System.Runtime.Intrinsics APIs"/>
                    <TextBlock Grid.Row="1" Margin="8,0,0,0" Foreground="Gray" Text="E.g. '_mm_add_epi8'"/>
                    <TextBox Grid.Row="2" Margin="8,6,0,6"
                        Width="363" HorizontalAlignment="Left" VerticalAlignment="Top"
                        Text="{Binding IntrinsicsVm.Input, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <ListBox Grid.Row="3" HorizontalAlignment="Stretch" ItemsSource="{Binding IntrinsicsVm.Suggestions}" BorderThickness="0" Background="White">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,3">
                                    <TextBox Text="{Binding Comments}" Background="Transparent" FontFamily="Consolas" Foreground="#5D9F5D" FontSize="14" BorderThickness="0" IsReadOnly="True"/>
                                    <TextBox Text="{Binding Method}" Background="Transparent" FontFamily="Consolas" FontWeight="Medium" FontSize="14"  BorderThickness="0" IsReadOnly="True"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Grid Grid.RowSpan="5" Visibility="{Binding IntrinsicsVm.IsBusy, Converter={StaticResource BooleanToVisibility}}" 
                          Background="#A8FFFFFF">
                        <ProgressBar IsIndeterminate="True" Width="200" Height="20"/>
                        <TextBlock  Foreground="Black" Text="{Binding IntrinsicsVm.LoadingStatus}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,60,0,0" FontSize="14" />
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Run" Width="98">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Run current app using local CoreCLR (for tests):" Margin="3" Foreground="Gray"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" Height="28">
                        <Button Content="Run 'Release'" Width="90" Margin="3" Command="{Binding RunVm.RunRelease}"/>
                        <Button Content="Run 'Debug'" Width="90" Margin="3" Command="{Binding RunVm.RunDebug}"/>
                    </StackPanel>
                    <CheckBox x:Name="WrapText" Checked="WrapText_Checked" Unchecked="WrapText_Checked" Grid.Row="1" HorizontalAlignment="Right" Content="Wrap text" VerticalAlignment="Center" Margin="0,0,3,0"/>
                    <TextBox x:Name="RunOutput" IsReadOnly="True" Grid.Row="2" Margin="3" TextWrapping="WrapWithOverflow"/>
                </Grid>
            </TabItem>
        </TabControl>

        <!--<Grid Grid.Row="2" Background="#3F959595">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Height="300" Background="#FFE8D8">
                <TextBlock Text="'GetFoo' is a generic method, please specify 3 type parameters:"/>
            </StackPanel>
        </Grid>-->

        <StatusBar Grid.Row="2">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Disasmo v."/>
                <TextBlock Text="{Binding SettingsVm.CurrentVersion}"/>

                <StackPanel Orientation="Horizontal" Visibility="{Binding SettingsVm.UpdateIsAvailable, Converter={StaticResource BooleanToVisibility}}">
                    <TextBlock Margin="20,0,0,0" Foreground="#871CAE" FontWeight="SemiBold"  Text="Update is available - "/>
                    <TextBlock Foreground="#871CAE" FontWeight="SemiBold"  Text="{Binding SettingsVm.AvailableVersion}"/>
                </StackPanel>
            </StackPanel>
        </StatusBar>

        <Grid x:Name="LoadingBar" Grid.RowSpan="3" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibility}}" Background="#A8FFFFFF" >
            <ProgressBar IsIndeterminate="True" Width="200" Height="20"/>
            <TextBlock x:Name="LoadingLabel" Foreground="Black" Text="{Binding LoadingStatus}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,60,0,0" FontSize="14" />
        </Grid>
        
    </Grid>
</UserControl>
